CREATE TABLE IF NOT EXISTS CLIENTES (
  ID    NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  NOME  VARCHAR2(100) NOT NULL,
  EMAIL VARCHAR2(120) UNIQUE NOT NULL
);

--TAREFA 1:
INSERT INTO CLIENTES (NOME, EMAIL) VALUES ('Pedroca', 'pedroca@email');
INSERT INTO CLIENTES (NOME, EMAIL) VALUES ('Vinicim', 'vinicio@email');
INSERT INTO CLIENTES (NOME, EMAIL) VALUES ('Nicolo', 'nicolau@email');

SELECT NOME, EMAIL FROM CLIENTES; 

--///////////////////////////////////////////////////////////////////

CREATE TABLE PRODUTOS (
  ID     NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  NOME   VARCHAR2(100) NOT NULL,
  PRECO  NUMBER(10,2)  NOT NULL CHECK (preco >= 0),
  TIPO   VARCHAR2(50) NOT NULL
);

INSERT INTO PRODUTOS (NOME, PRECO, TIPO) VALUES ('NOTEBOOK 1', 3600, 'NOTEBOOK');
INSERT INTO PRODUTOS (NOME, PRECO, TIPO) VALUES ('NOTEBOOK 2', 2800, 'NOTEBOOK');
INSERT INTO PRODUTOS (NOME, PRECO, TIPO) VALUES ('CELULAR 1', 1600, 'CELULAR');

SELECT NOME, PRECO, TIPO FROM PRODUTOS;

--TAREFA 2:
UPDATE PRODUTOS SET PRECO = 3990 WHERE ID = 1;
UPDATE PRODUTOS SET PRECO = 3080 WHERE ID = 2;

--/////////////////////////////////////////////////////

CREATE TABLE PEDIDOS (
  id         NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  cliente_id NUMBER NOT NULL,
  produto_id NUMBER NOT NULL,
  status     VARCHAR2(20) NOT NULL CHECK (status IN ('ABERTO','FINALIZADO','CANCELADO'))
);

-- Inserindo pedidos de teste
INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (1, 1, 'ABERTO');
INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (2, 2, 'CANCELADO');
INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (3, 3, 'FINALIZADO');
INSERT INTO PEDIDOS (cliente_id, produto_id, status) VALUES (1, 2, 'CANCELADO');

SELECT cliente_id, produto_id, status FROM PEDIDOS; 

--Tarefa 3:
DELETE FROM PEDIDOS WHERE status = 'CANCELADO';

--////////////////////////////////////////////////////////////////////

CREATE TABLE CLIENTES_OLD (
  NOME  VARCHAR2(100) NOT NULL,
  EMAIL VARCHAR2(120) NOT NULL
);

CREATE TABLE CLIENTES_NEW (
  NOME  VARCHAR2(100) NOT NULL,
  EMAIL VARCHAR2(120) NOT NULL
);

INSERT INTO CLIENTES_OLD (NOME, EMAIL) VALUES ('Ana P. Atualizada', 'ana@techplus.com');
INSERT INTO CLIENTES_NEW (NOME, EMAIL) VALUES ('Daniela Nova', 'daniela@techplus.com');

SELECT NOME, EMAIL FROM CLIENTES_OLD;
SELECT NOME, EMAIL FROM CLIENTES_NEW;

--TAREFA 4: MERGE
MERGE INTO CLIENTES_OLD X
USING CLIENTES_NEW Y 
ON (X.EMAIL = Y.EMAIL)
WHEN MATCHED THEN
    UPDATE SET X.NOME = Y.NOME
WHEN NOT MATCHED THEN
    INSERT (X.NOME, X.EMAIL) VALUES (Y.NOME, Y.EMAIL);

SELECT NOME, EMAIL FROM CLIENTES_OLD;

